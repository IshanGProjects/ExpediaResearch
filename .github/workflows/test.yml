name: CI Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12-dind
        options: --privileged
        # Removed the ports section entirely

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Pre-Cleanup Docker resources
        run: |
          docker-compose down -v || true
          docker system prune -af --volumes

      - name: Build and run containers
        run: |
          docker-compose -f docker-compose.yml up --build -d

      - name: Run tests
        run: docker-compose -f docker-compose.yml exec client npm test

      - name: Post-test diagnostics
        run: |
          echo "Docker containers still running:"
          docker ps
          echo "Docker networks:"
          docker network ls
          echo "Docker volumes:"
          docker volume ls

      - name: Clean up
        if: always()
        run: |
          docker-compose down
          docker system prune -af --volumes
        continue-on-error: true
